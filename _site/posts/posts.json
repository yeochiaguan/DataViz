[
  {
    "path": "posts/2021-05-23-dataviz-makeover-1/",
    "title": "DataViz Makeover #1",
    "description": "This is my submission for the Daat Viz Makeover Assignment for ISSS608 Visual Analytics and Applications",
    "author": [
      {
        "name": "Yeo Chia Guan Andy",
        "url": "https://github.com/yeochiaguan"
      }
    ],
    "date": "2021-05-30",
    "categories": [],
    "contents": "\r\nContent\r\n1.0 Original Visualization\r\n2.0 Critic and Suggestion for current graph\r\n2.1 Clarity\r\n2.2 Aestatics\r\n\r\n3.0 Proposed Design\r\n4.0 Data Preparation\r\n4.1 Remove Unused Rows\r\n4.2 Removing Unused Columns\r\n4.3 Renaming Sheet\r\n4.4 Edit Relationship\r\n4.5 Edit Data Type\r\n4.6 Pivot Data\r\n\r\n5.0 Building the Visualization\r\n5.1 Details and Labels\r\n5.2 Tooltip\r\n5.3 Improving Clarity in Values and Percentage Change\r\n\r\n6.0 Final Output\r\n6.1 Insights\r\n\r\n1.0 Original Visualization\r\nThe data visualization below is created using the data provided by Department of Statistics, Singapore (DOS) on the Merchandise Trade by Region/Market. The visualization shows the import and export for the top six trading countries from 2019 to 2020.\r\n\r\n2.0 Critic and Suggestion for current graph\r\n2.1 Clarity\r\nS/N\r\nCritique\r\nSuggestion\r\n1\r\nThe line chart for the import and export for each region is not clear as the colors are overlapping one another. An example is the export for Mainland China where the lines are covered by the import.\r\nLine graph with no fill can be used instead to prevent overlapping of colors\r\n2\r\nThere is no clear intent of the charts. The charts merely shows two lines on the trend of the import and export for each region without a clear intent where the comparison was.\r\nThe key points of the charts can be highlighted. An example will be to indicate the value of the highest export or import for each region for a particular year.\r\n3\r\nThe scale of the charts are inconsistent for each country. Mainland China has a upper bound for the export at 8M and import at 6M while Taiwan has a upper bound of export at 2M and export at 4M.\r\nThe scales should be consistent for each chart to clearly show the difference between each region.\r\n4\r\nThere is a mismatch between data and the title where the title labeled the chart to be the Merchandised Trade of Top Six Trading Countries from 2019 to 2020, but the data shows till 2021.\r\nThe charts should be consistent to show data for the same period.\r\n2.2 Aestatics\r\nS/N\r\nCritique\r\nSuggestion\r\n1\r\nThe line chart for the export for each region are covered by the import due to the colors fill. An example is the export for Mainland China where the lines are covered by the import.\r\nLine graph with no fill can be used instead to prevent overlapping of colors\r\n2\r\nThe width of the charts are inconsistent and misaligned when comparing for each country. An example would be Taiwan which has a smaller width as compared to Mainland China.\r\nThe width can be kept consistent for each chart.\r\n3\r\nThe import and export labels are not easy to read with the scales on the left and right side of the chart\r\nThe import data can be plotted against the export for each country for each year from 2019 to 2020 with the values shown on the data point\r\n3.0 Proposed Design\r\n\r\nFigure 1. Proposed Design Sketch\r\nDesign Objective\r\nS/N\r\nProposed Design Objective\r\n1\r\nThe proposed design intends to show the import against export for each country under a single chart for better clarity on the relative position, thus avoiding the issue of charts misalignment\r\n2\r\nThe proposed design will show the import and export data for 2019 and 2020 separately to show the changes in relative position for each country from 2019 to 2020.\r\n3\r\nThe proposed design will provide more details on the exact import and export values for each country for each year.\r\n4.0 Data Preparation\r\nThe data is taken from the Department of Statistics, Singapore (DOS) on the Merchandise Imports and Exports by Region/Market.\r\n4.1 Remove Unused Rows\r\nWithin the excel sheet, the rows 1 to 5 are do not contain any useful data for both the import and export data, hence these rows are removed. In addition, as we are interested in improving the original Visualization, only the top 6 countries 1) Hong Kong, 2) Mainland China, 3) Japan, 4) Malaysia, 5) Taiwan and 6) US, not sorted in any order are kept, while data from the other countries are excluded.\r\nFigure 2. Removing All Rows Less Top 6 Countries\r\nFigure 3. Table with Top 6 Countries\r\n4.2 Removing Unused Columns\r\nTo ensure that the data is insistent with the title and intent, data from year 2019 to 2020 were kept for analysis, while data from the other years are excluded.\r\nFigure 4. Removing Unused Columns\r\nFigure 5. Resulting Table\r\n4.3 Renaming Sheet\r\nFor better clarity, the excel sheets for import and export were renamed accordingly. This is done so that it will be clearer when the data is imported into Tableu.\r\nFigure 6. Renaming the excel sheets\r\n4.4 Edit Relationship\r\nWhen the file was initially loaded onto Tableau, the import and export data will need to be linked using the common field “variable”. In this case we link the Variables from both tables which represents each country.\r\nFigure 7. Edit Relationship to be by Variable Data Field\r\n4.5 Edit Data Type\r\nIt was also found that the Import and Export for each country were of string data type. This was not correct was the values should be numeric, thus the data type was amended accordingly.\r\nFigure 8. The Import and Export amount changed from String to Numeric Data Type\r\n4.6 Pivot Data\r\nThe data from 2019 to 2020 was pivoted to column form and tagged to the respective countries. This was done for both the import and export data. The data type for the pivot table was also changed to date datatype. The Headers were also renamed to “Countries”, “Month-Year” and “Import(Thousands)” respectively. The steps were repeated for the export data.\r\nFigure 9. Selected Columns to apply Pivot\r\nFigure 10. Changing headers and data types\r\nFigure 11. Update Relationship for Countries and Month-Year\r\n5.0 Building the Visualization\r\nOn Sheet 1, place the “Month-Year” and “Import (Thousands)” onto the columns and “Export (Thousands)” onto the rows.\r\nFigure 12. Place the Dimension and Measures onto the rows and columns\r\n5.1 Details and Labels\r\nThe “Country” measure was applied as the labels and details, the marks was changed to “circle” and the size was adjusted slightly smaller with the result as shown.\r\nFigure 13. Adding Details and Labels to the charts\r\nFor this Data Viz Makeover, we want to provide better clarity to the audience on the Import and Export Value, as well as the relative ranking for each Country.\r\nHence, a new calculated field “Rank by Import” and “Rank by Export” were created using the RANK_DENSE() function with the below expression. The\r\nFigure 14. Accessing add Calculated Field function\r\nFigure 15. Expression for Rank_Dense\r\n5.2 Tooltip\r\nThe tooltip adds additional information to the charts to send a clearer message. Information of interest such as the country, import and export amount as well as the respective ranks are added into the tooltip. To add in the newly created Calculated Field into the tooltip, both of the calculated fields are dragged into the “tooltip” and compute using “Country”.\r\nFigure 16. Adding Ranks into Tooltip\r\nThe calculated fields are added into the tool tip via the insert function. The description was amended to tell a story.\r\nFigure 17. Details in Tooltip amended to tell a Story\r\n5.3 Improving Clarity in Values and Percentage Change\r\nAt the current state, the import and export values could be confusing to the audience with values like “60M thousand”, so the values needed to be adjusted. The data provided was originally in thousands, so we will need to manually create a new calculated field Export Value and Import Value to show the actual export and import not in units of thousands. The Rank by Export and Rank by Import calculated field would also need to be amended accordingly using the Export (Value) and Import (Value) fields.\r\nFigure 18. Create New Calculated Field “Export (Value)”\r\nFigure 19. Replace Rows and Columns with New calculated Fields\"\r\nThe format of the Import and Export needed to be changed for better user experience. To do so, the Import and Export were changed under the Pane tab and the Numbers changed to Currency (custom) with display unit in Billions.\r\nFigure 20. Format Changed to Show Import in Billions\r\nWe are interested to find out the change in Import and Export for each country. To do do, we created new calculated fields Pct Change (Import) and Pct Change (Export) using the values from Import (Value) and Export (Value) and applied the Percentage Difference under Quick Table Calculation\r\n *Figure 22. Pct Change\r\nThe percentage change was inserted into the Tooltip.\r\n *Figure 23. Updated Tooltip with New Calculated Fields\r\n6.0 Final Output\r\nTo improve the aesthetics of the visualization, different colors are assigned to each country for ease of comparing the relative position of the country in 2019 and 2020. The field label Month-Year was also hidden.The final sheet was placed onto the dashboard as shown below.\r\nFigure 24. Final Output Visualization\r\n6.1 Insights\r\nWith the new Data Visualization, three major observations were made below.\r\nS/N\r\nObservations\r\n1\r\nMainland China had the highest Merchandised Trade in 2019 and 2020 with Import and Export over $65B and $70B respectively.\r\n2\r\nHong Kong was consistently the Rank of 6th in Import but maintained a Rank of 2 in Export.\r\n3\r\nTaiwan had the highest growth among the top six countries with an increase in Import and Export of 13.36% and 12.42% respectively.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-05-30T14:09:54+08:00",
    "input_file": "dataviz-makeover-1.knit.md"
  },
  {
    "path": "posts/2021-05-22-my-1st-post/",
    "title": "My 1st Post",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Yeo Chia Guan Andy",
        "url": "https://github.com/yeochiaguan"
      }
    ],
    "date": "2021-05-22",
    "categories": [],
    "contents": "\r\n1.0 Overview\r\nIn this article, we will show you how to plot a figure with multiple histograms by using ggplot2 and ggpubr packages.\r\n2.0 Installing and Launching R Packages\r\nBefore you get started, you are required:\r\nto start a new R project, and\r\nto create a new R Markdown document.\r\n\r\nTo insert a graph.\r\n\r\nNext, you will use the code chunk below to install and launch ggpubr and tidyverse in RStudio.\r\nR code\r\npackages = c(‘ggpubr’, ‘tidyverse’)\r\nfor(p in packages){library if(!require(p, character.only = T)){ install.packages(p) } library(p, character.only = T) }\r\n3.0 Importing and Preparing The Data Set\r\nIn this hands-on exercise, the Wine Quality Data Set of UCI Machine Learning Repository will be used. The data set consists of 13 variables and 6497 observations. For the purpose of this exercise, we have combined the red wine and white wine data into one data file. It is called wine_quality and is in csv file format.\r\n3.1 Importing Data\r\nFirst, let us import the data into R by using read_csv() of readr package.\r\nR code\r\nwine <- read_csv(“data/wine_quality.csv”)\r\nNotice that beside quality and type, the rest of the variables are numerical and continuous data type.\r\n4.0 Univariate EDA with Histogram\r\nIn the figure below, multiple histograms are plottted by using ggplot() and geom_histogram() of ggplot2 package. Then, ggarrange() of ggpubr package is used to patch these histogram into a single figure to reveal the distribution of the selected variables in the wine quality data sets.\r\nRcode\r\nfa <- ggplot(data=wine, aes(x= fixed acidity)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) va <- ggplot(data=wine, aes(x= volatile acidity)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) ca <- ggplot(data=wine, aes(x= citric acid)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) rs <- ggplot(data=wine, aes(x= residual sugar)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) ch <- ggplot(data=wine, aes(x= chlorides)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) fSO2 <- ggplot(data=wine, aes(x= free sulfur dioxide)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) tSO2 <- ggplot(data=wine, aes(x= total sulfur dioxide)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) density <- ggplot(data=wine, aes(x= density)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) pH <- ggplot(data=wine, aes(x= pH)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) sulphates <- ggplot(data=wine, aes(x= sulphates)) + geom_histogram(bins=20, color=“black”, fill=“light blue”) alcohol <- ggplot(data=wine, aes(x= alcohol)) + geom_histogram(bins=20, color=“black”, fill=“light blue”)\r\nggarrange(fa, va, ca, rs, ch, fSO2, tSO2, density, pH, sulphates, alcohol, ncol = 4, nrow = 3)\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-05-30T12:58:52+08:00",
    "input_file": {}
  }
]
